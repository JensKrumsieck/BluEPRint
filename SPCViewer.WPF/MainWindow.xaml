<controls:DefaultWindow x:Class="SPCViewer.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converter="clr-namespace:SPCViewer.WPF.Converter"
        xmlns:extension="clr-namespace:SPCViewer.WPF.Extension" 
        xmlns:viewmodel="clr-namespace:SPCViewer.ViewModel;assembly=SPCViewer.ViewModel"
        xmlns:controls="clr-namespace:ThemeCommons.Controls;assembly=ThemeCommons"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
        x:Name="mainWindow"
        IconSize="24"
        mc:Ignorable="d"
        TitlebarHeight="55"
        Icon="Resources/spc_icon.ico"
        Style="{DynamicResource WindowStyle}"
        AllowDrop="True" Height="550" Width="1000" MinWidth="1000">
    <controls:DefaultWindow.TitlebarContent>
        <Grid VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/> <!--title col-->
                <ColumnDefinition/> <!--toolbar col-->
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <ToolBarTray Style="{DynamicResource MaterialDesignToolBarTray}" Background="{StaticResource Background}" WindowChrome.IsHitTestVisibleInChrome="True">
                    <ToolBar Style="{DynamicResource ToolbarStyle}">
                        <Button Style="{DynamicResource ToolbarButton}" Click="Open_Click" extension:ControlExtensions.Icon="Folder" ToolTip="Open"/>
                        <Button Style="{DynamicResource ToolbarButton}" Click="Save_Click" extension:ControlExtensions.Icon="ContentSave" ToolTip="Save"
                            IsEnabled="{Binding Path=SelectedItem, Converter={converter:NotNullConverter}}"/>
                    </ToolBar>
                </ToolBarTray>
                <TextBlock Text="{Binding Path=SelectedItem.Title, FallbackValue=Open File}" VerticalAlignment="Center"/>
            </StackPanel>
            <ToolBarTray Grid.Column="1" Style="{DynamicResource MaterialDesignToolBarTray}" Background="{StaticResource Background}" WindowChrome.IsHitTestVisibleInChrome="True"
                         HorizontalAlignment="Right" Margin="0 0 150 0">
                <ToolBar Style="{DynamicResource ToolbarStyle}" Background="{StaticResource Background}" VerticalAlignment="Bottom">
                    <ListBox SelectedIndex="{Binding SelectedItem.MouseAction, Mode=TwoWay, IsAsync=True, Converter={converter:UIActionToIntConverter}}" 
                         Background="Transparent" SelectionMode="Single" IsEnabled="{Binding Path=SelectedItem, Converter={converter:NotNullConverter}}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="MagnifyScan" ToolTip="Zoom"/>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="EyeDropperVariant" ToolTip="Tracker"/>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="FitToPageOutline" ToolTip="Normalize"/>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="BoxCutter" ToolTip="Peak Picking"/>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="MathIntegral" ToolTip="Integrate"/>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="EyedropperPlus" ToolTip="PickValue"/>
                    </ListBox>
                    <Separator Style="{StaticResource SeparatorStyle}"/>
                    <ListBox SelectionMode="Extended" SelectionChanged="AdditionalSeries_VisibleChanged"  Background="Transparent" 
                         IsEnabled="{Binding Path=SelectedItem, Converter={converter:NotNullConverter}}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="Delta" ToolTip="Show Derivative"
                                 IsSelected="{Binding SelectedItem.DerivSeries.IsVisible, Mode=TwoWay}"/>
                        <ListBoxItem Style="{StaticResource ToolbarListItem}" extension:ControlExtensions.Icon="MathIntegralBox" ToolTip="Show Integral"
                                 IsSelected="{Binding SelectedItem.IntegralSeries.IsVisible, Mode=TwoWay}"/>
                    </ListBox>
                </ToolBar>
            </ToolBarTray>
        </Grid>
    </controls:DefaultWindow.TitlebarContent>
    <Window.Resources>
        <ResourceDictionary Source="Styles/TabTemplate.xaml" />
    </Window.Resources>
    <Grid>
        <TabControl x:Name="TabContainer" ContentTemplate="{StaticResource TabTemplate}" 
                    ItemsSource="{Binding Path=Items}" Drop="OnFileDrop" 
                    SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Header" Value="{Binding Title}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border BorderThickness="0" BorderBrush="Transparent">
                                    <Border x:Name="PART_BORDER" Padding="40 10" IsHitTestVisible="True" Background="Transparent"
                                            BorderThickness="0" BorderBrush="{StaticResource ActiveColor}"
                                            materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignFlatButtonRipple}">
                                        <Grid MinHeight="20">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="16"/>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Image VerticalAlignment="Center" Source="/SPCViewer.WPF;component/Resources/spc_icon.ico"/>
                                            <Label Grid.Column="1" Content="{TemplateBinding Header}" 
                                                   Foreground="{StaticResource Background}"
                                                   FontSize="14" HorizontalAlignment="Center"
                                                   FontWeight="DemiBold"
                                                   x:Name="PART_TEXT"/>
                                            <Button Grid.Column="2" Width="16" Height="16" 
                                                    Margin="2 0 0 0" VerticalAlignment="Center"
                                                    CommandParameter="{Binding}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.DeleteItemCommand}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid >
                                                            <Ellipse x:Name="Bg" Fill="Transparent" Stroke="{StaticResource ActiveColor}" 
                                                                     StrokeThickness="0" />
                                                            <materialDesign:PackIcon Kind="Close" Width="12" Height="12"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Bg" Property="StrokeThickness" Value="1" />
                                                                <Setter TargetName="Bg" Property="Fill" Value="#FFA6A6A6"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            </Grid>
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="PART_BORDER" Property="BorderThickness" Value="0 0 0 1.5"/>
                                        <Setter TargetName="PART_TEXT" Property="Foreground" Value="{StaticResource ActiveColor}"/> 
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="PART_BORDER" Property="Background" Value="{StaticResource HoverColorOpacity}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>
    </Grid>
</controls:DefaultWindow>
