<Window x:Class="SPCViewer.WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        AllowDrop="True"
        Title="MainWindow" Height="550" Width="1000" >
    <Window.Resources>
        <ResourceDictionary Source="Styles/TabTemplate.xaml" />
    </Window.Resources>
    
    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top" Style="{DynamicResource MaterialDesignToolBarTray}" Background="#222831">
            <ToolBar Style="{DynamicResource ToolbarStyle}">
                <Button Style="{StaticResource ToolbarButton}" Click="Open_Click">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="Folder" HorizontalAlignment="Center"/>
                        <TextBlock Text="Open" TextWrapping="Wrap" TextAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Style="{StaticResource ToolbarButton}" Click="Save_Click">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="ContentSave" HorizontalAlignment="Center"/>
                        <TextBlock Text="Save" TextWrapping="Wrap" TextAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Separator Style="{StaticResource SeparatorStyle}"/>
                <ListBox SelectedIndex="{Binding SelectedItem.MouseAction, Mode=TwoWay, IsAsync=True, Converter={StaticResource IntUiActionConverter}}" Background="Transparent" SelectionMode="Single">
                    <ListBoxItem Style="{StaticResource ToolbarListItem}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="MagnifyScan" HorizontalAlignment="Center"/>
                            <TextBlock Text="Zoom" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{StaticResource ToolbarListItem}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="EyedropperVariant" HorizontalAlignment="Center"/>
                            <TextBlock Text="Tracker" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{StaticResource ToolbarListItem}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="FitToPageOutline" HorizontalAlignment="Center"/>
                            <TextBlock Text="Normalize" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{StaticResource ToolbarListItem}">
                        <StackPanel HorizontalAlignment="Center">
                            <materialDesign:PackIcon Kind="BoxCutter" HorizontalAlignment="Center"/>
                            <TextBlock Text="Peak Picking" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{StaticResource ToolbarListItem}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="MathIntegral" HorizontalAlignment="Center"/>
                            <TextBlock Text="Integrate" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{StaticResource ToolbarListItem}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="EyedropperPlus" HorizontalAlignment="Center"/>
                            <TextBlock Text="Pick Value" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                </ListBox>
                <Separator Style="{StaticResource SeparatorStyle}"/>
                <ListBox SelectionMode="Extended" SelectionChanged="AdditionalSeries_VisibleChanged">
                    <ListBoxItem Style="{StaticResource ToolbarListItem}" IsSelected="{Binding SelectedItem.DerivSeries.IsVisible, Mode=TwoWay}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="Delta" HorizontalAlignment="Center"/>
                            <TextBlock Text="Show Derivative" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                    <ListBoxItem Style="{StaticResource ToolbarListItem}" IsSelected="{Binding SelectedItem.IntegralSeries.IsVisible, Mode=TwoWay}">
                        <StackPanel>
                            <materialDesign:PackIcon Kind="MathIntegralBox" HorizontalAlignment="Center"/>
                            <TextBlock Text="Show Integral" TextWrapping="Wrap" TextAlignment="Center"/>
                        </StackPanel>
                    </ListBoxItem>
                </ListBox>
                <Separator Style="{StaticResource SeparatorStyle}"/>
            </ToolBar>
        </ToolBarTray>
        <TabControl x:Name="TabContainer" ContentTemplate="{StaticResource TabTemplate}" 
                    ItemsSource="{Binding Path=Items}" Drop="OnFileDrop" 
                    SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Header" Value="{Binding Title}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Border BorderThickness="0" BorderBrush="Transparent">
                                    <Border x:Name="PART_BORDER" Padding="40 10" IsHitTestVisible="True" Background="Transparent"
                                            BorderThickness="0" BorderBrush="{StaticResource ActiveColor}"
                                            materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignFlatButtonRipple}">
                                        <Grid MinHeight="20">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="16"/>
                                                <ColumnDefinition Width="1*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Image VerticalAlignment="Center" Source="/SPCViewer.WPF;component/Resources/spc_icon.ico"/>
                                            <Label Grid.Column="1" Content="{TemplateBinding Header}" 
                                                   Foreground="{StaticResource Background}"
                                                   FontSize="14" HorizontalAlignment="Center"
                                                   FontWeight="DemiBold"
                                                   x:Name="PART_TEXT"/>
                                            <Button Grid.Column="2" Width="16" Height="16" 
                                                    Margin="2 0 0 0" VerticalAlignment="Center"
                                                    CommandParameter="{Binding}"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.DeleteItemCommand}">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Grid >
                                                            <Ellipse x:Name="Bg" Fill="Transparent" Stroke="{StaticResource ActiveColor}" 
                                                                     StrokeThickness="0" />
                                                            <materialDesign:PackIcon Kind="Close" Width="12" Height="12"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center" />
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="Bg" Property="StrokeThickness" Value="1" />
                                                                <Setter TargetName="Bg" Property="Fill" Value="#FFA6A6A6"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                            </Grid>
                                    </Border>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="PART_BORDER" Property="BorderThickness" Value="0 0 0 1.5"/>
                                        <Setter TargetName="PART_TEXT" Property="Foreground" Value="{StaticResource ActiveColor}"/> 
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="PART_BORDER" Property="Background" Value="{StaticResource HoverColorOpacity}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>
    </DockPanel>
</Window>
