<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModel="clr-namespace:SPCViewer.ViewModel;assembly=SPCViewer.ViewModel"
                    xmlns:oxy="http://oxyplot.org/skiawpf"
                    xmlns:oxyshared="clr-namespace:OxyPlot.Wpf;assembly=OxyPlot.Wpf.Shared"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:selector="clr-namespace:ThemeCommons.Selector;assembly=ThemeCommons"
                    x:Class="SPCViewer.WPF.Templates.TabTemplate">
    <!--PLOTVIEW TAB TEMPLATE-->
    <DataTemplate x:Key="TabTemplate" DataType="viewModel:DocumentViewModel">
        <Grid>
            <oxy:PlotView x:Name="ThePlotView" Model="{Binding Path=Model}" 
                          Controller="{Binding Controller}">
                <oxy:PlotView.ZoomRectangleTemplate>
                    <ControlTemplate>
                        <Rectangle Fill="{StaticResource ActiveColorOpacity}" Stroke="{StaticResource Background}" StrokeDashArray="3,3" />
                    </ControlTemplate>
                </oxy:PlotView.ZoomRectangleTemplate>
                <oxy:PlotView.DefaultTrackerTemplate>
                    <ControlTemplate>
                        <oxyshared:TrackerControl Position="{Binding Position}" 
                                                  LineExtents="{Binding PlotModel.PlotArea}"
                                                  Background="{StaticResource Background}"
                                                  BorderEdgeMode="Unspecified"
                                                  BorderThickness="2"
                                                  BorderBrush="{StaticResource ActiveColor}"
                                                  Foreground="{StaticResource Foreground}">
                            <TextBlock Text="{Binding}" Margin="10" />
                        </oxyshared:TrackerControl>
                    </ControlTemplate>
                </oxy:PlotView.DefaultTrackerTemplate>
            </oxy:PlotView>
           </Grid>
    </DataTemplate>

    <!--SETTINGS TAB TEMPLATE-->
    <DataTemplate x:Key="SettingsTemplate" DataType="viewModel:DocumentViewModel">
        <DataTemplate.Resources>
            <materialDesign:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>
        </DataTemplate.Resources>
        <ScrollViewer Visibility="{Binding Converter={StaticResource NullableToVisibilityConverter}}">
            <StackPanel Margin="15">
                <Label Content="X Axis" Style="{StaticResource SidebarLabel}"/>
                <UniformGrid>
                    <TextBox Style="{StaticResource SidebarTextBox}" 
                             Text="{Binding Model.XAxis.BindableActualMinimum, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=Explicit}"
                             materialDesign:HintAssist.HelperText="X Axis Minimum" KeyUp="BindingOnEnterUp" LostFocus="TextBoxOnLostFocus"/>
                    <TextBox Style="{StaticResource SidebarTextBox}" 
                             Text="{Binding Model.XAxis.BindableActualMaximum, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=Explicit}" 
                             materialDesign:HintAssist.HelperText="X Axis Maximum" KeyUp="BindingOnEnterUp" LostFocus="TextBoxOnLostFocus"/>
                </UniformGrid>
                <Label Content="Y Axis" Style="{StaticResource SidebarLabel}"/>
                <UniformGrid>
                    <TextBox Style="{StaticResource SidebarTextBox}" 
                         Text="{Binding Model.YAxis.BindableActualMinimum, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=Explicit}"
                         materialDesign:HintAssist.HelperText="Y Axis Minimum" KeyUp="BindingOnEnterUp" LostFocus="TextBoxOnLostFocus"/>
                    <TextBox Style="{StaticResource SidebarTextBox}" 
                         Text="{Binding Model.YAxis.BindableActualMaximum, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=Explicit}" 
                         materialDesign:HintAssist.HelperText="Y Axis Maximum" KeyUp="BindingOnEnterUp" LostFocus="TextBoxOnLostFocus"/>
                </UniformGrid>
                <Separator/>
                <Label Content="Stroke" Style="{StaticResource SidebarLabel}"/>
                <UniformGrid>
                    <TextBox Style="{StaticResource SidebarTextBox}" 
                             Text="{Binding SelectedItem.ExperimentalSeries.BindableStrokeThickness, Mode=TwoWay, IsAsync=True, UpdateSourceTrigger=Explicit}"
                             KeyUp="BindingOnEnterUp" LostFocus="TextBoxOnLostFocus"/>
                </UniformGrid>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <!--PROPERTIES TAB TEMPLATE-->
    <DataTemplate x:Key="PropertiesTemplate" DataType="viewModel:SpectrumViewModel">
        <DataTemplate.Resources>
            <materialDesign:NullableToVisibilityConverter x:Key="NullableToVisibilityConverter"/>
        </DataTemplate.Resources>
        <ScrollViewer Visibility="{Binding Converter={StaticResource NullableToVisibilityConverter}}">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Text="{Binding Path=Title, Mode=OneWay}"
                           Style="{StaticResource MaterialDesignHeadline6TextBlock}"/>
                <TextBlock TextWrapping="Wrap" Margin="0,10" 
                           Style="{StaticResource MaterialDesignSubtitle2TextBlock}" Text="Properties"/>
                <ItemsControl ItemsSource="{Binding Path=SpecialParameters, Mode=OneWay}" ItemTemplate="{DynamicResource DictionaryList}"/>
                <StackPanel>
                    <TextBlock Text="Peaks" Margin="0,10"
                               Style="{StaticResource MaterialDesignSubtitle2TextBlock}"/>
                    <ItemsControl ItemsSource="{Binding Peaks}" ItemTemplate="{DynamicResource PeakItemsControl}" ItemsPanel="{DynamicResource Wrap}"/>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Peaks.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
                <StackPanel>
                    <TextBlock Text="Integrals" Margin="0,10"
                               Style="{StaticResource MaterialDesignSubtitle2TextBlock}"/>
                    <ItemsControl ItemsSource="{Binding Integrals}" ItemTemplate="{DynamicResource IntegralItemsControl}" ItemsPanel="{DynamicResource Wrap}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Label>Integration Factor:</Label>
                        <TextBox Grid.Column="1" Text="{Binding IntegralFactor, Mode=TwoWay}" 
                                 materialDesign:HintAssist.HelperText="1 = absolute Integrals"
                                 materialDesign:HintAssist.Hint="Integration Factor"/>
                    </Grid>
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Integrals.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </DataTemplate>

    <selector:TemplateByTypeSelector x:Key="TemplateByTypeSelector" TemplateForNullItem="{StaticResource PropertiesTemplate}">
        <selector:TemplateByTypeSelector.Templates>
            <selector:TemplateForType Type="viewModel:DocumentViewModel" DataTemplate="{StaticResource SettingsTemplate}"/>
            <selector:TemplateForType Type="viewModel:SpectrumViewModel" DataTemplate="{StaticResource PropertiesTemplate}"/>
        </selector:TemplateByTypeSelector.Templates> 
    </selector:TemplateByTypeSelector>
</ResourceDictionary>